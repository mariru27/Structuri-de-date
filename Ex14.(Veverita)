#include<iostream>

int** veverita(int n, int **t) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (i - 1 >= 0 && j - 1 >= 0) {
				if (t[i - 1][j] + t[i][j] > t[i][j - 1] + t[i][j]) {
					t[i][j] += t[i - 1][j];
				}
				else {
					t[i][j] += t[i][j - 1];
				}
			}
			else {
				if (i - 1 >= 0)
					t[i][j] += t[i - 1][j];
				if (j - 1 >= 0)
					t[i][j] += t[i][j - 1];
			}
		}
	}
	return t;
}

void print(int n, int** t) {
	std::cout << "*-------------Matricea rezultat este-------------*\n";
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			std::cout << t[i][j] << " ";
		}
		std::cout << std::endl;
	}
	std::cout << "\nNr maxim de ghinde:" << t[n - 1][n - 1];
}

void main() {
	int n;
	int** t;
	std::cout << "Introdu n:";
	std::cin >> n;
	t = new int*[n];
	for (int i = 0; i < n; i++) {
		*(t + i) = new int[n];
	}
	std::cout << "Introdu valorile matricii patratice:\n";
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			std::cin >> t[i][j];
		}
	}
	t = veverita(n, t);
	print(n, t);
	std::cout << std::endl;
	system("pause");
}
